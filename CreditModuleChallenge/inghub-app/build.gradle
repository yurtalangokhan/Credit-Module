plugins {
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'jacoco'
apply plugin: 'idea'
apply plugin: 'groovy'
group 'com.inghub.credit'

version = projectVersion



repositories {
	mavenCentral()
	maven {
		url 'https://repo.maven.apache.org/maven2';
		allowInsecureProtocol = true
	}
}

java {
	sourceCompatibility = gradle.environment.java.sourceCompatibility
	targetCompatibility = gradle.environment.java.targetCompatibility

	compileJava.options.encoding = gradle.environment.encoding.type
	compileTestJava.options.encoding = gradle.environment.encoding.type
}

idea {
	module {
		sourceDirs += file('generated/')
		generatedSourceDirs += file('generated/')
	}
}

configurations.all {
	exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	exclude group: 'commons-logging', module: 'commons-logging'
}


dependencies {

	/*Module Dependencies*/

	api(
			project(gradle.coreProjectName),
	)

	implementation "org.springframework.boot:spring-boot-starter-log4j2"
	modules {
		module("org.springframework.boot:spring-boot-starter-logging") {
			replacedBy("org.springframework.boot:spring-boot-starter-log4j2", "Use Log4j2 instead of Logback")
		}
	}

	implementation(
			//spring
			[group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: springBootVersion],
			[group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: springBootVersion],
			[group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion],
			[group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: springBootVersion],
			[group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: springBootVersion],
			[group: 'org.springframework.boot', name: 'spring-boot-starter-data-rest', version: springBootVersion],
			[group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: springBootVersion],
			[group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: springBootVersion],

			//	DB
			[group: 'org.hibernate.orm', name: 'hibernate-core', version: hibernateVersion],
			[group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: jakartaPersistenceVersion],
			[group: 'jakarta.transaction', name: 'jakarta.transaction-api', version: jakartaTransactionVerson],
			[group: 'com.querydsl', name: 'querydsl-jpa', version: queryDslVersion, classifier: 'jakarta'],
			[group: 'com.querydsl', name: 'querydsl-sql', version: queryDslVersion],

			// Misc
			[group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: jacksonVersion],
			[group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion],
			[group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion],
			[group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: jacksonVersion],

		/*	platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudDependenciesVersion}"),
			[group: 'com.google.code.gson', name: 'gson', version: gsonVersion],*/
	)

	runtimeOnly(
			[group: 'org.postgresql', name: 'postgresql', version: postgreSqlVersion]
	)
	testImplementation(
			[group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion],
			[group: 'org.assertj', name: 'assertj-core', version: assertjVersion],
			[group: 'org.mockito', name: 'mockito-core', version: mockitoCore],
			[group: 'org.mockito', name: 'mockito-inline', version: mockitoInline],
			[group: 'org.mockito', name: 'mockito-junit-jupiter', version: mockitoJunitJupiter],
	)
	compileOnly(
			[group: 'org.mapstruct', name: 'mapstruct', version: mapStructVersion],
			[group: 'org.mapstruct', name: 'mapstruct-processor', version: mapStructVersion],
			[group: 'org.projectlombok', name: 'lombok', version: lombokVersion]
	)
	annotationProcessor(
			[group: 'com.querydsl', name: 'querydsl-apt', version: queryDslVersion, classifier: 'jakarta'],
			[group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: jakartaPersistenceVersion],
			[group: 'org.mapstruct', name: 'mapstruct-processor', version: mapStructVersion],
			[group: 'org.projectlombok', name: 'lombok', version: lombokVersion]
	)
	testAnnotationProcessor(group: 'org.mapstruct', name: 'mapstruct-processor', version: mapStructVersion)
}